[{"path":"oist.github.io/topcorneR/articles/PlateClasses.html","id":"wells","dir":"Articles","previous_headings":"","what":"Wells","title":"S4 classes for representing plates","text":"Well represents coordinates well plate given format (default, 384). Given coordinates, functions Row() Column() extract row column coordinates letters numbers respectively. Note plate formats names characters, numbers. well coordinates come plate format, possible determine “next” well","code":"well <- Well(\"C14\") well |> Row() #> [1] \"C\" Column(well) #> [1] \"14\" nextWell(well) #> C15 (384-well format)"},{"path":"oist.github.io/topcorneR/articles/PlateClasses.html","id":"plates","dir":"Articles","previous_headings":"","what":"Plates","title":"S4 classes for representing plates","text":"plate object represents physical mutliwell plate may filled liquids. addition format, dead volume property used calculate possible anymore draw liquid well.","code":""},{"path":[]},{"path":"oist.github.io/topcorneR/articles/PlateClasses.html","id":"conventions","dir":"Articles","previous_headings":"For developers","what":"Conventions","title":"S4 classes for representing plates","text":"Class names start capital letters. Constructor functions name class.","code":""},{"path":"oist.github.io/topcorneR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"package maintainer. Maintainer.","code":""},{"path":"oist.github.io/topcorneR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ww (2023). topcorneR: Package (Title Case). R package version 0.1.0.","code":"@Manual{,   title = {topcorneR: What the Package Does (Title Case)},   author = {Who wrote it},   year = {2023},   note = {R package version 0.1.0}, }"},{"path":"oist.github.io/topcorneR/reference/Column.html","id":null,"dir":"Reference","previous_headings":"","what":"The column of a well — Column","title":"The column of a well — Column","text":"Given well object, tells column well .","code":""},{"path":"oist.github.io/topcorneR/reference/Column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The column of a well — Column","text":"","code":"Column(object)"},{"path":"oist.github.io/topcorneR/reference/Column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The column of a well — Column","text":"object [`Well`] object column coordinates extracted.","code":""},{"path":"oist.github.io/topcorneR/reference/Column.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The column of a well — Column","text":"column name character format","code":""},{"path":"oist.github.io/topcorneR/reference/Column.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The column of a well — Column","text":"","code":"well <- Well(\"A01\") Column(well) #> [1] \"01\""},{"path":"oist.github.io/topcorneR/reference/Plate-class.html","id":null,"dir":"Reference","previous_headings":"","what":"A multiwell plate — Plate-class","title":"A multiwell plate — Plate-class","text":"Objects class represent multiwell plate.","code":""},{"path":"oist.github.io/topcorneR/reference/Plate-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"A multiwell plate — Plate-class","text":"type plate type `\"384\"`, `\"96\"`, etc.` deadVolume dead volume wells plate. maxVolume maximum volume wells plate.","code":""},{"path":"oist.github.io/topcorneR/reference/Plate-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A multiwell plate — Plate-class","text":"","code":"plate <- Plate( type       = \"384\"               , deadVolume = 10000               , maxVolume  = 100000) plate #> A Plate with data about 384 wells (dead volume: 10000; max volume: 1e+05)."},{"path":"oist.github.io/topcorneR/reference/PlateTypeToWellNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Well names of plate type — PlateTypeToWellNames","title":"Well names of plate type — PlateTypeToWellNames","text":"Lists well names known well plate format, left right top bottom.","code":""},{"path":"oist.github.io/topcorneR/reference/PlateTypeToWellNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Well names of plate type — PlateTypeToWellNames","text":"","code":"PlateTypeToWellNames(type = c(\"96\", \"384\"))"},{"path":"oist.github.io/topcorneR/reference/PlateTypeToWellNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Well names of plate type — PlateTypeToWellNames","text":"type name plate type (character)","code":""},{"path":"oist.github.io/topcorneR/reference/PlateTypeToWellNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Well names of plate type — PlateTypeToWellNames","text":"Returns character vector well names.","code":""},{"path":"oist.github.io/topcorneR/reference/PlateTypeToWellNames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Well names of plate type — PlateTypeToWellNames","text":"","code":"PlateTypeToWellNames(\"96\") #>  [1] \"A01\" \"A02\" \"A03\" \"A04\" \"A05\" \"A06\" \"A07\" \"A08\" \"A09\" \"A10\" \"A11\" \"A12\" #> [13] \"B01\" \"B02\" \"B03\" \"B04\" \"B05\" \"B06\" \"B07\" \"B08\" \"B09\" \"B10\" \"B11\" \"B12\" #> [25] \"C01\" \"C02\" \"C03\" \"C04\" \"C05\" \"C06\" \"C07\" \"C08\" \"C09\" \"C10\" \"C11\" \"C12\" #> [37] \"D01\" \"D02\" \"D03\" \"D04\" \"D05\" \"D06\" \"D07\" \"D08\" \"D09\" \"D10\" \"D11\" \"D12\" #> [49] \"E01\" \"E02\" \"E03\" \"E04\" \"E05\" \"E06\" \"E07\" \"E08\" \"E09\" \"E10\" \"E11\" \"E12\" #> [61] \"F01\" \"F02\" \"F03\" \"F04\" \"F05\" \"F06\" \"F07\" \"F08\" \"F09\" \"F10\" \"F11\" \"F12\" #> [73] \"G01\" \"G02\" \"G03\" \"G04\" \"G05\" \"G06\" \"G07\" \"G08\" \"G09\" \"G10\" \"G11\" \"G12\" #> [85] \"H01\" \"H02\" \"H03\" \"H04\" \"H05\" \"H06\" \"H07\" \"H08\" \"H09\" \"H10\" \"H11\" \"H12\" PlateTypeToWellNames(\"384\") #>   [1] \"A01\" \"A02\" \"A03\" \"A04\" \"A05\" \"A06\" \"A07\" \"A08\" \"A09\" \"A10\" \"A11\" \"A12\" #>  [13] \"A13\" \"A14\" \"A15\" \"A16\" \"A17\" \"A18\" \"A19\" \"A20\" \"A21\" \"A22\" \"A23\" \"A24\" #>  [25] \"B01\" \"B02\" \"B03\" \"B04\" \"B05\" \"B06\" \"B07\" \"B08\" \"B09\" \"B10\" \"B11\" \"B12\" #>  [37] \"B13\" \"B14\" \"B15\" \"B16\" \"B17\" \"B18\" \"B19\" \"B20\" \"B21\" \"B22\" \"B23\" \"B24\" #>  [49] \"C01\" \"C02\" \"C03\" \"C04\" \"C05\" \"C06\" \"C07\" \"C08\" \"C09\" \"C10\" \"C11\" \"C12\" #>  [61] \"C13\" \"C14\" \"C15\" \"C16\" \"C17\" \"C18\" \"C19\" \"C20\" \"C21\" \"C22\" \"C23\" \"C24\" #>  [73] \"D01\" \"D02\" \"D03\" \"D04\" \"D05\" \"D06\" \"D07\" \"D08\" \"D09\" \"D10\" \"D11\" \"D12\" #>  [85] \"D13\" \"D14\" \"D15\" \"D16\" \"D17\" \"D18\" \"D19\" \"D20\" \"D21\" \"D22\" \"D23\" \"D24\" #>  [97] \"E01\" \"E02\" \"E03\" \"E04\" \"E05\" \"E06\" \"E07\" \"E08\" \"E09\" \"E10\" \"E11\" \"E12\" #> [109] \"E13\" \"E14\" \"E15\" \"E16\" \"E17\" \"E18\" \"E19\" \"E20\" \"E21\" \"E22\" \"E23\" \"E24\" #> [121] \"F01\" \"F02\" \"F03\" \"F04\" \"F05\" \"F06\" \"F07\" \"F08\" \"F09\" \"F10\" \"F11\" \"F12\" #> [133] \"F13\" \"F14\" \"F15\" \"F16\" \"F17\" \"F18\" \"F19\" \"F20\" \"F21\" \"F22\" \"F23\" \"F24\" #> [145] \"G01\" \"G02\" \"G03\" \"G04\" \"G05\" \"G06\" \"G07\" \"G08\" \"G09\" \"G10\" \"G11\" \"G12\" #> [157] \"G13\" \"G14\" \"G15\" \"G16\" \"G17\" \"G18\" \"G19\" \"G20\" \"G21\" \"G22\" \"G23\" \"G24\" #> [169] \"H01\" \"H02\" \"H03\" \"H04\" \"H05\" \"H06\" \"H07\" \"H08\" \"H09\" \"H10\" \"H11\" \"H12\" #> [181] \"H13\" \"H14\" \"H15\" \"H16\" \"H17\" \"H18\" \"H19\" \"H20\" \"H21\" \"H22\" \"H23\" \"H24\" #> [193] \"I01\" \"I02\" \"I03\" \"I04\" \"I05\" \"I06\" \"I07\" \"I08\" \"I09\" \"I10\" \"I11\" \"I12\" #> [205] \"I13\" \"I14\" \"I15\" \"I16\" \"I17\" \"I18\" \"I19\" \"I20\" \"I21\" \"I22\" \"I23\" \"I24\" #> [217] \"J01\" \"J02\" \"J03\" \"J04\" \"J05\" \"J06\" \"J07\" \"J08\" \"J09\" \"J10\" \"J11\" \"J12\" #> [229] \"J13\" \"J14\" \"J15\" \"J16\" \"J17\" \"J18\" \"J19\" \"J20\" \"J21\" \"J22\" \"J23\" \"J24\" #> [241] \"K01\" \"K02\" \"K03\" \"K04\" \"K05\" \"K06\" \"K07\" \"K08\" \"K09\" \"K10\" \"K11\" \"K12\" #> [253] \"K13\" \"K14\" \"K15\" \"K16\" \"K17\" \"K18\" \"K19\" \"K20\" \"K21\" \"K22\" \"K23\" \"K24\" #> [265] \"L01\" \"L02\" \"L03\" \"L04\" \"L05\" \"L06\" \"L07\" \"L08\" \"L09\" \"L10\" \"L11\" \"L12\" #> [277] \"L13\" \"L14\" \"L15\" \"L16\" \"L17\" \"L18\" \"L19\" \"L20\" \"L21\" \"L22\" \"L23\" \"L24\" #> [289] \"M01\" \"M02\" \"M03\" \"M04\" \"M05\" \"M06\" \"M07\" \"M08\" \"M09\" \"M10\" \"M11\" \"M12\" #> [301] \"M13\" \"M14\" \"M15\" \"M16\" \"M17\" \"M18\" \"M19\" \"M20\" \"M21\" \"M22\" \"M23\" \"M24\" #> [313] \"N01\" \"N02\" \"N03\" \"N04\" \"N05\" \"N06\" \"N07\" \"N08\" \"N09\" \"N10\" \"N11\" \"N12\" #> [325] \"N13\" \"N14\" \"N15\" \"N16\" \"N17\" \"N18\" \"N19\" \"N20\" \"N21\" \"N22\" \"N23\" \"N24\" #> [337] \"O01\" \"O02\" \"O03\" \"O04\" \"O05\" \"O06\" \"O07\" \"O08\" \"O09\" \"O10\" \"O11\" \"O12\" #> [349] \"O13\" \"O14\" \"O15\" \"O16\" \"O17\" \"O18\" \"O19\" \"O20\" \"O21\" \"O22\" \"O23\" \"O24\" #> [361] \"P01\" \"P02\" \"P03\" \"P04\" \"P05\" \"P06\" \"P07\" \"P08\" \"P09\" \"P10\" \"P11\" \"P12\" #> [373] \"P13\" \"P14\" \"P15\" \"P16\" \"P17\" \"P18\" \"P19\" \"P20\" \"P21\" \"P22\" \"P23\" \"P24\""},{"path":"oist.github.io/topcorneR/reference/Row.html","id":null,"dir":"Reference","previous_headings":"","what":"The row of a well — Row","title":"The row of a well — Row","text":"Given well object, tells row well .","code":""},{"path":"oist.github.io/topcorneR/reference/Row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The row of a well — Row","text":"","code":"Row(object)"},{"path":"oist.github.io/topcorneR/reference/Row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The row of a well — Row","text":"object [`Well`] object row coordinates extracted.","code":""},{"path":"oist.github.io/topcorneR/reference/Row.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The row of a well — Row","text":"row name character format.","code":""},{"path":"oist.github.io/topcorneR/reference/Row.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The row of a well — Row","text":"","code":"well <- Well(well = \"A01\", plateFormat = \"384\") Row(well) #> [1] \"A\""},{"path":"oist.github.io/topcorneR/reference/Well-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Well coordinates — Well-class","title":"Well coordinates — Well-class","text":"Objects class represent position microwell plate.  class exists validity coordinates can tested (instance `M16` rejected 96-well plate).","code":""},{"path":"oist.github.io/topcorneR/reference/Well-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Well coordinates — Well-class","text":"well position microwell plate. plateFormat plate format.","code":""},{"path":"oist.github.io/topcorneR/reference/Well-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Well coordinates — Well-class","text":"","code":"well <- Well(well = \"A01\", plateFormat = \"384\") well #> A01 (384-well format) as.character(well) #> [1] \"A01\" show(well) #> A01 (384-well format) Row(well) #> [1] \"A\""},{"path":"oist.github.io/topcorneR/reference/nextWell.html","id":null,"dir":"Reference","previous_headings":"","what":"Move to the next well — nextWell","title":"Move to the next well — nextWell","text":"left right, , give position next well.","code":""},{"path":"oist.github.io/topcorneR/reference/nextWell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move to the next well — nextWell","text":"","code":"nextWell(well)"},{"path":"oist.github.io/topcorneR/reference/nextWell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move to the next well — nextWell","text":"well [`Well`] object.","code":""},{"path":"oist.github.io/topcorneR/reference/nextWell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Move to the next well — nextWell","text":"[`Well`] object.","code":""},{"path":"oist.github.io/topcorneR/reference/nextWell.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Move to the next well — nextWell","text":"","code":"nextWell(Well(\"A12\", plateFormat = \"96\")) #> B01 (96-well format) nextWell(Well(\"A12\", plateFormat = \"384\")) #> A13 (384-well format) nextWell(Well(\"A24\", plateFormat = \"384\")) #> B01 (384-well format)"},{"path":"oist.github.io/topcorneR/reference/plateWellVolume.html","id":null,"dir":"Reference","previous_headings":"","what":"Get reagent volume — plateWellVolume","title":"Get reagent volume — plateWellVolume","text":"given plate, get volume reagent contained given well.","code":""},{"path":"oist.github.io/topcorneR/reference/plateWellVolume.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get reagent volume — plateWellVolume","text":"","code":"plateWellVolume(plate, well, what)"},{"path":"oist.github.io/topcorneR/reference/plateWellVolume.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get reagent volume — plateWellVolume","text":"plate [`Plate`] object. well [`Well`] object. name reagent.","code":""},{"path":"oist.github.io/topcorneR/reference/plateWellVolume.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get reagent volume — plateWellVolume","text":"","code":"destPlate <- Plate( type       = \"384\"                   , deadVolume = 10000                   , maxVolume  = 100000) destPlate <- destPlate |>   setWell(Well(\"A01\"), \"dNTP\",   50) |>   setWell(Well(\"A02\"), \"dNTP\",  100) |>   setWell(Well(\"A01\"), \"buffer\", 50)  destPlate |> plateWellVolume(Well(\"A01\")) #> [1] 100 destPlate |> plateWellVolume(Well(\"A01\"), \"dNTP\") #> [1] 50 destPlate |> plateWellVolume(Well(\"A01\"), \"buffer\") #> [1] 50  destPlate |> plateWellVolume(Well(\"A02\")) #> [1] 100 destPlate |> plateWellVolume(Well(\"A02\"), \"dNTP\") #> [1] 100 destPlate |> plateWellVolume(Well(\"A02\"), \"buffer\") #> [1] 0"},{"path":"oist.github.io/topcorneR/reference/seekReagent.html","id":null,"dir":"Reference","previous_headings":"","what":"Find a well that can provide enough reagent — seekReagent","title":"Find a well that can provide enough reagent — seekReagent","text":"Given [`Plate`] object, check reagent available, yes, well.","code":""},{"path":"oist.github.io/topcorneR/reference/seekReagent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find a well that can provide enough reagent — seekReagent","text":"","code":"seekReagent(object, reagent, start)"},{"path":"oist.github.io/topcorneR/reference/seekReagent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find a well that can provide enough reagent — seekReagent","text":"object [`Plate`] object. reagent reagent name. start [`Well`] object (avoid backtracking).","code":""},{"path":"oist.github.io/topcorneR/reference/seekReagent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find a well that can provide enough reagent — seekReagent","text":"`Well` object.","code":""},{"path":"oist.github.io/topcorneR/reference/seekReagent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find a well that can provide enough reagent — seekReagent","text":"","code":"sourcePlate <- Plate( type       = \"384\"                     , deadVolume = 10000                     , maxVolume  = 100000)  sourcePlate <- sourcePlate |>   setWell(Well(\"A01\"), \"dNTP\",   100000) |>   setWell(Well(\"A02\"), \"dNTP\",   100000) |>   setWell(Well(\"A03\"), \"buffer\", 100000)  seekReagent(sourcePlate, \"buffer\") #> A03 (384-well format)"},{"path":"oist.github.io/topcorneR/reference/setWell.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the contents of a well — setWell","title":"Set the contents of a well — setWell","text":"Set contents well","code":""},{"path":"oist.github.io/topcorneR/reference/setWell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the contents of a well — setWell","text":"","code":"setWell(plate, well, what, volume)"},{"path":"oist.github.io/topcorneR/reference/setWell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the contents of a well — setWell","text":"plate [`Plate`] object. well [`Well`] object. reagent name (character value). volume volume nanoliters (numeric value).","code":""},{"path":"oist.github.io/topcorneR/reference/setWell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the contents of a well — setWell","text":"Returns [`Plate`] object.","code":""},{"path":"oist.github.io/topcorneR/reference/setWell.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the contents of a well — setWell","text":"","code":"example(\"Plate-class\") #>  #> Plt-cl> plate <- Plate( type       = \"384\" #> Plt-cl+               , deadVolume = 10000 #> Plt-cl+               , maxVolume  = 100000) #>  #> Plt-cl> plate #> A Plate with data about 384 wells (dead volume: 10000; max volume: 1e+05). sourcePlate <- plate A01 <- Well(\"A01\") sourcePlate <- setWell(sourcePlate, A01, \"dNTP\", 100000) sourcePlate <- setWell(sourcePlate, Well(well = \"A02\", plateFormat = \"384\"), \"dNTP\", 100000) sourcePlate <- setWell(sourcePlate, Well(well = \"A03\", plateFormat = \"384\"), \"buffer\", 100000) DataFrame(sourcePlate) #> DataFrame with 384 rows and 2 columns #>          dNTP    buffer #>     <numeric> <numeric> #> A01     1e+05        NA #> A02     1e+05        NA #> A03        NA     1e+05 #> A04        NA        NA #> A05        NA        NA #> ...       ...       ... #> P20        NA        NA #> P21        NA        NA #> P22        NA        NA #> P23        NA        NA #> P24        NA        NA"},{"path":"oist.github.io/topcorneR/reference/sourceReagent.html","id":null,"dir":"Reference","previous_headings":"","what":"Get reagent name — sourceReagent","title":"Get reagent name — sourceReagent","text":"source plate, get name reagent contained given well.","code":""},{"path":"oist.github.io/topcorneR/reference/sourceReagent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get reagent name — sourceReagent","text":"","code":"sourceReagent(plate, well)"},{"path":"oist.github.io/topcorneR/reference/sourceReagent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get reagent name — sourceReagent","text":"plate [`Plate`] object. well [`Well`] object.","code":""},{"path":"oist.github.io/topcorneR/reference/sourceReagent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get reagent name — sourceReagent","text":"","code":"sourcePlate <- Plate( type       = \"384\"                     , deadVolume = 10000                     , maxVolume  = 100000)  sourcePlate <- sourcePlate |>   setWell(Well(\"A01\"), \"dNTP\",   100000) |>   setWell(Well(\"A02\"), \"dNTP\",   100000) |>   setWell(Well(\"A03\"), \"buffer\", 100000)  sourcePlate |> DataFrame() |> head() #> DataFrame with 6 rows and 2 columns #>          dNTP    buffer #>     <numeric> <numeric> #> A01     1e+05        NA #> A02     1e+05        NA #> A03        NA     1e+05 #> A04        NA        NA #> A05        NA        NA #> A06        NA        NA  sourcePlate |> sourceReagent(Well(\"A01\")) #> [1] \"dNTP\" sourcePlate |> sourceReagent(Well(\"A03\")) #> [1] \"buffer\""},{"path":"oist.github.io/topcorneR/reference/validationFunctions.html","id":null,"dir":"Reference","previous_headings":"","what":"Tests the well's row name is valid — validRow","title":"Tests the well's row name is valid — validRow","text":"Tests well's row name valid Tests well's column number valid","code":""},{"path":"oist.github.io/topcorneR/reference/validationFunctions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tests the well's row name is valid — validRow","text":"","code":"validRow(w)  validColumn(w)"},{"path":"oist.github.io/topcorneR/reference/validationFunctions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tests the well's row name is valid — validRow","text":"w [`Well`].","code":""},{"path":"oist.github.io/topcorneR/reference/validationFunctions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tests the well's row name is valid — validRow","text":"TRUE valid, otherwise returns error TRUE valid, otherwise returns error","code":""}]
